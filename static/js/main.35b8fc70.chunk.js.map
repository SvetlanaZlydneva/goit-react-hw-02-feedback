{"version":3,"sources":["components/Container/Container.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/Notification/Notification.module.css","components/Container/Container.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Section/Section.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Container","children","className","styles","container","FeedbackOptions","options","onLeaveFeedback","buttons","map","option","key","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","list","Section","title","Notification","message","App","state","handleChangeStatistics","stateName","setState","prevState","Object","values","this","reduce","count","currentValue","Math","round","countTotalFeedback","keys","countPositiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mIACAA,EAAOC,QAAU,CAAC,UAAY,+B,gBCA9BD,EAAOC,QAAU,CAAC,QAAU,mC,gBCA5BD,EAAOC,QAAU,CAAC,KAAO,2B,gBCAzBD,EAAOC,QAAU,CAAC,MAAQ,yB,gBCA1BD,EAAOC,QAAU,CAAC,QAAU,gC,uLCMbC,EAJG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAChB,yBAAKC,UAAWC,IAAOC,WAAYH,I,gBCmBtBI,EAnBS,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,gBAAZ,OACtB,yBAAKL,UAAWC,IAAOK,SACpBF,EAAQG,KAAI,SAAAC,GAAM,OACjB,4BACEC,IAAKD,EACLE,KAAK,SACLC,QAAS,kBAAMN,EAAgBG,KAE9BA,Q,gBCYMI,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,wBAAIjB,UAAWC,IAAOiB,MACpB,qCAAWL,GACX,wCAAcC,GACd,oCAAUC,GACV,sCAAYC,GACXC,EAAqB,GACpB,kDAAwBA,EAAxB,O,gBCKSE,EAZC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOrB,EAAV,EAAUA,SAAV,OACd,iCACE,wBAAIC,UAAWC,IAAOmB,OAAQA,GAC7BrB,I,iBCKUsB,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,uBAAGtB,UAAWC,IAAOqB,SAAUA,ICoDlBC,E,4MAjDbC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPU,uBAAyB,SAAAC,GACvB,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAYE,EAAUF,GAAa,O,mEAKtC,OAAOG,OAAOC,OAAOC,KAAKP,OAAOQ,QAC/B,SAACC,EAAOC,GAAR,OAAyBD,EAAQC,O,wDAKnC,OAAOC,KAAKC,MAAOL,KAAKP,MAAMX,KAAOkB,KAAKM,qBAAwB,O,+BAIlE,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAASjB,MAAM,yBACb,kBAAC,EAAD,CACEhB,QAASyB,OAAOS,KAAKP,KAAKP,OAC1BnB,gBAAiB0B,KAAKN,0BAG1B,kBAAC,EAAD,CAASL,MAAM,cACZW,KAAKM,qBAAuB,EAC3B,kBAAC,EAAD,CACExB,KAAMkB,KAAKP,MAAMX,KACjBC,QAASiB,KAAKP,MAAMV,QACpBC,IAAKgB,KAAKP,MAAMT,IAChBC,MAAOe,KAAKM,qBACZpB,mBAAoBc,KAAKQ,oCAG3B,kBAAC,EAAD,CAAcjB,QAAQ,4B,GA1ChBkB,a,YCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.35b8fc70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__2MMyw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"FeedbackOptions_buttons__3TzCa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__HxPB-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Section_title__le80j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__37lQQ\"};","import React from 'react';\r\nimport styles from './Container.module.css';\r\n\r\nconst Container = ({ children }) => (\r\n  <div className={styles.container}>{children}</div>\r\n);\r\n\r\nexport default Container;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => (\r\n  <div className={styles.buttons}>\r\n    {options.map(option => (\r\n      <button\r\n        key={option}\r\n        type=\"button\"\r\n        onClick={() => onLeaveFeedback(option)}\r\n      >\r\n        {option}\r\n      </button>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <ul className={styles.list}>\r\n    <li>Good: {good}</li>\r\n    <li>Neutral: {neutral}</li>\r\n    <li>Bad: {bad}</li>\r\n    <li>Total: {total}</li>\r\n    {positivePercentage > 0 && (\r\n      <li>Positive feedback: {positivePercentage}%</li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => (\r\n  <section>\r\n    <h2 className={styles.title}>{title}</h2>\r\n    {children}\r\n  </section>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.message}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Container from './components/Container';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleChangeStatistics = stateName => {\n    this.setState(prevState => ({\n      [stateName]: prevState[stateName] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    return Object.values(this.state).reduce(\n      (count, currentValue) => count + currentValue,\n    );\n  }\n\n  countPositiveFeedbackPercentage() {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  }\n\n  render() {\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleChangeStatistics}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() > 0 ? (\n            <Statistics\n              good={this.state.good}\n              neutral={this.state.neutral}\n              bad={this.state.bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './styles.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}